BOSClean
LAAClean
BOSLAAClean = rbind(BOSClean, LAAClean)
BOSLAAClean
#I need to be careful to only remove duplicates in terms of name, and nothing else.
BOSClean <- BOS[!duplicated(BOS$playerID), ]
LAAClean <- LAA[!duplicated(LAA$playerID), ]
BOSClean
LAAClean
BOSCleanDoubles = duplicated(BOSCleanplayerID)
table(BOSCleanDoubles)
LAACleanDoubles = duplicated(LAACleanplayerID)
table(LAACleanDoubles)
BOSLAAClean = rbind(BOSClean, LAAClean)
BOSLAAClean
#I need to be careful to only remove duplicates in terms of name, and nothing else.
BOSClean <- BOS[!duplicated(BOS$playerID), ]
LAAClean <- LAA[!duplicated(LAA$playerID), ]
BOSClean
LAAClean
BOSCleanDoubles = duplicated(BOSCleanp$layerID)
#I need to be careful to only remove duplicates in terms of name, and nothing else.
BOSClean <- BOS[!duplicated(BOS$playerID), ]
LAAClean <- LAA[!duplicated(LAA$playerID), ]
BOSClean
LAAClean
BOSCleanDoubles = duplicated(BOSClean$playerID)
table(BOSCleanDoubles)
LAACleanDoubles = duplicated(LAAClean$playerID)
table(LAACleanDoubles)
BOSLAAClean = rbind(BOSClean, LAAClean)
BOSLAAClean
#1
BOSLAACleanGames = BOSLAAClean$G
BOSCleanGames = BOSClean$G
LAACleanGames = LAAClean$G
#2
BOSLAACleanRuns = BOSLAAClean$R
BOSCleanRuns = BOSClean$R
LAACleanRuns = LAAClean$R
#3
BOSLAACleanHits = BOSLAAClean$H
BOSCleanHits = BOSClean$H
LAACleanHits = LAAClean$H
#4
BOSLAACleanAtBat = BOSLAAClean$AB
BOSCleanAtBat = BOSClean$AB
LAACleanAtBat = LAAClean$AB
#5
BOSLAACleanRunsBatted = BOSLAAClean$RBI
BOSCleanRunsBatted = BOSClean$RBI
LAACleanRunsBatted = LAAClean$RBI
#6
BOSLAACleanWeight = BOSLAAClean$weight
BOSCleanWeight = BOSClean$weight
LAACleanWeight = LAAClean$weight
#7
BOSLAACleanHeight = BOSLAAClean$height
BOSCleanHeight = BOSClean$height
LAACleanHeight = LAAClean$height
#8
BOSLAACleanSalary = BOSLAAClean$salary
BOSCleanSalary = BOSClean$salary
LAACleanSalary = LAAClean$salary
#9
BOSLAACleanBirth = BOSLAAClean$birthDate
BOSCleanBirth = BOSClean$birthDate
LAACleanBirth = LAAClean$birthDate
#10
BOSLAACleanCareer = BOSLAAClean$career.length
BOSCleanCareer = BOSClean$career.length
LAACleanCareer = LAAClean$career.length
#11
BOSLAACleanBats = BOSLAAClean$bats
BOSCleanBats = BOSClean$bats
LAACleanBats = LAAClean$bats
#12
BOSLAACleanAge = BOSLAAClean$age
BOSCleanAge = BOSClean$age
LAACleanAge = LAAClean$age
#13
BOSLAACleanSeasonHit = BOSLAAClean$hit.ind
BOSSCleaneasonHit = BOSClean$hit.ind
LAACleanSeasonHit = LAAClean$hit.ind
#14
BOSLAACleanplayerID = BOSLAAClean$playerID
BOSCleanplayerID = BOSClean$playerID
LAACleanplayerID = LAAClean$playerID
##variablew platerID
##teamID.x
##R - Runs
##G - Games
##H - Hits
##AB - AtBat
##RBI - RunsBatted
##weight
##height
##salary
##birthDate - Birth
##career.length - Career
##bats
##age
##hit.ind - SeasonHit
summary(BOSLAAClean)
hist(BOSLAACleanRuns, prob= T)
lines(density(BOSLAACleanRuns), col = "red")
hist(BOSLAACleanGames, prob= T)
lines(density(BOSLAACleanGames), col = "red")
hist(BOSLAACleanHits, prob= T)
lines(density(BOSLAACleanHits), col = "red")
hist(BOSLAACleanAtBat, prob= T)
lines(density(BOSLAACleanAtBat), col = "red")
hist(BOSLAACleanRunsBatted, prob= T)
lines(density(BOSLAACleanRunsBatted), col = "red")
hist(BOSLAACleanWeight, prob= T)
lines(density(BOSLAACleanWeight), col = "red")
hist(BOSLAACleanHeight, prob= T)
lines(density(BOSLAACleanHeight), col = "red")
hist(BOSLAACleanSalary, prob= T)
lines(density(BOSLAACleanSalary), col = "red")
hist(BOSLAACleanCareer, prob= T)
lines(density(BOSLAACleanCareer), col = "red")
hist(BOSLAACleanAge, prob= T)
lines(density(BOSLAACleanAge), col = "red")
hist(BOSLAACleanSeasonHit, prob= T)
lines(density(BOSLAACleanSeasonHit), col = "red")
shapiro.test(BOSLAACleanWeight)
shapiro.test(BOSLAACleanHeight)
shapiro.test(BOSLAACleanAge)
skewness(BOSLAACleanRuns)
library(ggplot2)
library(dplyr)
library(dbplyr)
library(foreign)
library(ggpubr)
library(xtable)
library(mgcv)
library(tree)
library(validate)
library(lubridate)
library(GGally)
install.packages("PerformanceAnalytics")
library(ggplot2)
library(dplyr)
library(dbplyr)
library(foreign)
library(ggpubr)
library(xtable)
library(mgcv)
library(tree)
library(validate)
library(lubridate)
library(GGally)
library(PerformanceAnalytics)
skewness(BOSLAACleanRuns)
skewness(BOSLAACleanHits)
skewness(BOSLAACleanBats)
skewness(BOSLAACleanRuns)
skewness(BOSLAACleanHits)
skewness(BOSLAACleanRunsBatted)
skewness(BOSLAACleanGames)
skewness(BOSLAACleanSalary)
skewness(BOSLAACleanCareer)
BOSLAACleanerRunsBattedDone <- abs(BOSLAACleanRunsBattedDone)
BOSLAACleanerRunsBattedDone
hist(BOSLAACleanerRunsBattedDone, prob = T)
lines(density(BOSLAACleanerRunsBattedDone), col = "red")
summary(BOSLAACleanerRunsBattedDone)
## create new sets removing values =0
BOSLAACleanRunsDone = BOSLAACleanRuns[BOSLAACleanRuns != "0"]
hist(BOSLAACleanRunsDone, prob = T)
lines(density(BOSLAACleanRunsDone), col = "red")
summary(BOSLAACleanRunsDone)
BOSLAACleanHitsDone = BOSLAACleanHits[BOSLAACleanHits != "0"]
hist(BOSLAACleanHitsDone, prob = T)
lines(density(BOSLAACleanHitsDone), col = "red")
summary(BOSLAACleanHitsDone)
BOSLAACleanAtBatDone = BOSLAACleanAtBat[BOSLAACleanAtBat != "0"]
hist(BOSLAACleanAtBatDone, prob = T)
lines(density(BOSLAACleanAtBatDone), col = "red")
summary(BOSLAACleanAtBatDone)
BOSLAACleanRunsBattedDone = BOSLAACleanRunsBatted[BOSLAACleanRunsBatted !="0"]
##This is a very good moment to remove that -4
hist(BOSLAACleanRunsBattedDone, prob = T)
lines(density(BOSLAACleanRunsBattedDone), col = "red")
summary(BOSLAACleanRunsBattedDone)
##Another way to do this is to select sums greater than or lower than a certain amount. I will probably to this to analyse those who did not do any runs hits, at bats, or bats.
##
## create new sets removing values =0
BOSLAACleanRunsDone = BOSLAACleanRuns[BOSLAACleanRuns != "0"]
hist(BOSLAACleanRunsDone, prob = T)
lines(density(BOSLAACleanRunsDone), col = "red")
summary(BOSLAACleanRunsDone)
BOSLAACleanHitsDone = BOSLAACleanHits[BOSLAACleanHits != "0"]
hist(BOSLAACleanHitsDone, prob = T)
lines(density(BOSLAACleanHitsDone), col = "red")
summary(BOSLAACleanHitsDone)
BOSLAACleanAtBatDone = BOSLAACleanAtBat[BOSLAACleanAtBat != "0"]
hist(BOSLAACleanAtBatDone, prob = T)
lines(density(BOSLAACleanAtBatDone), col = "red")
summary(BOSLAACleanAtBatDone)
BOSLAACleanRunsBattedDone = BOSLAACleanRunsBatted[BOSLAACleanRunsBatted !="0"]
##This is a very good moment to remove that -4
hist(BOSLAACleanRunsBattedDone, prob = T)
lines(density(BOSLAACleanRunsBattedDone), col = "red")
summary(BOSLAACleanRunsBattedDone)
##Another way to do this is to select sums greater than or lower than a certain amount. I will probably to this to analyse those who did not do any runs hits, at bats, or bats.
skewness(BOSLAACleanRunsDone)
skewness(BOSLAACleanHitsDone)
skewness(BOSLAACleanRunsBattedDone)
skewness(BOSLAACleanGamesDone)
skewness(BOSLAACleanRuns)
skewness(BOSLAACleanHits)
skewness(BOSLAACleanRunsBatted)
skewness(BOSLAACleanAtBat)
skewness(BOSLAACleanGames)
skewness(BOSLAACleanSalary)
skewness(BOSLAACleanCareer)
## create new sets removing values =0
BOSLAACleanRunsDone = BOSLAACleanRuns[BOSLAACleanRuns != "0"]
hist(BOSLAACleanRunsDone, prob = T)
lines(density(BOSLAACleanRunsDone), col = "red")
summary(BOSLAACleanRunsDone)
BOSLAACleanHitsDone = BOSLAACleanHits[BOSLAACleanHits != "0"]
hist(BOSLAACleanHitsDone, prob = T)
lines(density(BOSLAACleanHitsDone), col = "red")
summary(BOSLAACleanHitsDone)
BOSLAACleanAtBatDone = BOSLAACleanAtBat[BOSLAACleanAtBat != "0"]
hist(BOSLAACleanAtBatDone, prob = T)
lines(density(BOSLAACleanAtBatDone), col = "red")
summary(BOSLAACleanAtBatDone)
BOSLAACleanRunsBattedDone = BOSLAACleanRunsBatted[BOSLAACleanRunsBatted !="0"]
##This is a very good moment to remove that -4
hist(BOSLAACleanRunsBattedDone, prob = T)
lines(density(BOSLAACleanRunsBattedDone), col = "red")
summary(BOSLAACleanRunsBattedDone)
##Another way to do this is to select sums greater than or lower than a certain amount. I will probably to this to analyse those who did not do any runs hits, at bats, or bats.
skewness(BOSLAACleanRunsDone)
skewness(BOSLAACleanHitsDone)
skewness(BOSLAACleanRunsBattedDone)
skewness(BOSLAACleanAtBatDone)
##
BOSLAACleanerRunsBattedDone <- abs(BOSLAACleanRunsBattedDone)
BOSLAACleanerRunsBattedDone
hist(BOSLAACleanerRunsBattedDone, prob = T)
lines(density(BOSLAACleanerRunsBattedDone), col = "red")
summary(BOSLAACleanerRunsBattedDone)
skewness(BOSLAACleanerRunsBattedDone)
BOSLAACleanerRunsBattedDone <- abs(BOSLAACleanRunsBattedDone)
BOSLAACleanerRunsBattedDone
hist(BOSLAACleanerRunsBattedDone, prob = T)
lines(density(BOSLAACleanerRunsBattedDone), col = "red")
summary(BOSLAACleanerRunsBattedDone)
RunsBattedDoneSkew = skewness(BOSLAACleanerRunsBattedDone)
BOSLAACleanerRunsBattedDone <- abs(BOSLAACleanRunsBattedDone)
BOSLAACleanerRunsBattedDone
hist(BOSLAACleanerRunsBattedDone, prob = T)
lines(density(BOSLAACleanerRunsBattedDone), col = "red")
summary(BOSLAACleanerRunsBattedDone)
RunsBattedDoneSkew = skewness(BOSLAACleanerRunsBattedDone)
RunsBattedDoneSkew
## create new sets removing values =0
BOSLAACleanRunsDone = BOSLAACleanRuns[BOSLAACleanRuns != "0"]
hist(BOSLAACleanRunsDone, prob = T)
lines(density(BOSLAACleanRunsDone), col = "red")
summary(BOSLAACleanRunsDone)
BOSLAACleanHitsDone = BOSLAACleanHits[BOSLAACleanHits != "0"]
hist(BOSLAACleanHitsDone, prob = T)
lines(density(BOSLAACleanHitsDone), col = "red")
summary(BOSLAACleanHitsDone)
BOSLAACleanAtBatDone = BOSLAACleanAtBat[BOSLAACleanAtBat != "0"]
hist(BOSLAACleanAtBatDone, prob = T)
lines(density(BOSLAACleanAtBatDone), col = "red")
summary(BOSLAACleanAtBatDone)
BOSLAACleanRunsBattedDone = BOSLAACleanRunsBatted[BOSLAACleanRunsBatted !="0"]
##This is a very good moment to remove that -4
hist(BOSLAACleanRunsBattedDone, prob = T)
lines(density(BOSLAACleanRunsBattedDone), col = "red")
summary(BOSLAACleanRunsBattedDone)
##Another way to do this is to select sums greater than or lower than a certain amount. I will probably to this to analyse those who did not do any runs hits, at bats, or bats.
RunsDoneSkew =  skewness(BOSLAACleanRunsDone)
HisDoneSkew = skewness(BOSLAACleanHitsDone)
AtBatDoneSkew = skewness(BOSLAACleanAtBatDone)
##
## create new sets removing values =0
BOSLAACleanRunsDone = BOSLAACleanRuns[BOSLAACleanRuns != "0"]
hist(BOSLAACleanRunsDone, prob = T)
lines(density(BOSLAACleanRunsDone), col = "red")
summary(BOSLAACleanRunsDone)
BOSLAACleanHitsDone = BOSLAACleanHits[BOSLAACleanHits != "0"]
hist(BOSLAACleanHitsDone, prob = T)
lines(density(BOSLAACleanHitsDone), col = "red")
summary(BOSLAACleanHitsDone)
BOSLAACleanAtBatDone = BOSLAACleanAtBat[BOSLAACleanAtBat != "0"]
hist(BOSLAACleanAtBatDone, prob = T)
lines(density(BOSLAACleanAtBatDone), col = "red")
summary(BOSLAACleanAtBatDone)
BOSLAACleanRunsBattedDone = BOSLAACleanRunsBatted[BOSLAACleanRunsBatted !="0"]
##This is a very good moment to remove that -4
hist(BOSLAACleanRunsBattedDone, prob = T)
lines(density(BOSLAACleanRunsBattedDone), col = "red")
summary(BOSLAACleanRunsBattedDone)
##Another way to do this is to select sums greater than or lower than a certain amount. I will probably to this to analyse those who did not do any runs hits, at bats, or bats.
RunsDoneSkew =  skewness(BOSLAACleanRunsDone)
RunsDoneSkew
HisDoneSkew = skewness(BOSLAACleanHitsDone)
HisDoneSkew
AtBatDoneSkew = skewness(BOSLAACleanAtBatDone)
AtBatDoneSkew
##
## create new sets removing values =0
BOSLAACleanRunsDone = BOSLAACleanRuns[BOSLAACleanRuns != "0"]
hist(BOSLAACleanRunsDone, prob = T)
lines(density(BOSLAACleanRunsDone), col = "red")
summary(BOSLAACleanRunsDone)
BOSLAACleanHitsDone = BOSLAACleanHits[BOSLAACleanHits != "0"]
hist(BOSLAACleanHitsDone, prob = T)
lines(density(BOSLAACleanHitsDone), col = "red")
summary(BOSLAACleanHitsDone)
BOSLAACleanAtBatDone = BOSLAACleanAtBat[BOSLAACleanAtBat != "0"]
hist(BOSLAACleanAtBatDone, prob = T)
lines(density(BOSLAACleanAtBatDone), col = "red")
summary(BOSLAACleanAtBatDone)
BOSLAACleanRunsBattedDone = BOSLAACleanRunsBatted[BOSLAACleanRunsBatted !="0"]
##This is a very good moment to remove that -4
hist(BOSLAACleanRunsBattedDone, prob = T)
lines(density(BOSLAACleanRunsBattedDone), col = "red")
summary(BOSLAACleanRunsBattedDone)
##Another way to do this is to select sums greater than or lower than a certain amount. I will probably to this to analyse those who did not do any runs hits, at bats, or bats.
RunsDoneSkew =  skewness(BOSLAACleanRunsDone)
RunsDoneSkew
HisDoneSkew = skewness(BOSLAACleanHitsDone)
HisDoneSkew
AtBatDoneSkew = skewness(BOSLAACleanAtBatDone)
AtBatDoneSkew
RunsBattedDoneSkew = skewness(BOSLAACleanRunsBattedDone)
RunsBattedDoneSkew
##
ggcorr(BOSLAAClean)
#create version of only what was done
# another version could perhaps include the version with the zero values to illustrate their effect
HitsLM = (lm(formula = BOSLAACleanHits ~ BOSLAACleanSalary))
plot(HitsLM)
GamesLM = (lm(formula = BOSLAACleanGames ~ BOSLAACleanSalary))
plot(GamesLM)
summary(GamesLM)
RunsLM = (lm(formula = BOSLAACleanRuns ~ BOSLAACleanSalary))
plot(RunsLM)
RunsBattedLM = (lm(formula = BOSLAACleanRunsBatted ~ BOSLAACleanSalary))
plot(RunsBattedLM)
summary(GamesLM)
summary(RunsLM)
summary(RunsBattedLM)
summary(HeightLM)
summary(WeightLM)
#create version of only what was done
# another version could perhaps include the version with the zero values to illustrate their effect
HitsLM = (lm(formula = BOSLAACleanHits ~ BOSLAACleanSalary))
plot(HitsLM)
GamesLM = (lm(formula = BOSLAACleanGames ~ BOSLAACleanSalary))
plot(GamesLM)
RunsLM = (lm(formula = BOSLAACleanRuns ~ BOSLAACleanSalary))
plot(RunsLM)
RunsBattedLM = (lm(formula = BOSLAACleanRunsBatted ~ BOSLAACleanSalary))
plot(RunsBattedLM)
HeightLM = lm(formula = BOSLAACleanHeight ~ BOSLAACleanSalary)
plot(HeightLM)
WeightLM = lm(formula = BOSLAACleanWeight ~ BOSLAACleanSalary)
plot(WeightLM)
#create model comparing heigth and weright - scatter plot?
##testing correlations is important here
cor(BOSLAACleanAge, BOSLAACleanSalary, method = c("pearson", "kendall", "spearman"))
cor.test(BOSLAACleanAge, BOSLAACleanSalary, method=c("pearson", "kendall", "spearman"))
cor(BOSLAACleanCareer, BOSLAACleanSalary, method = c("pearson", "kendall", "spearman"))
cor.test(BOSLAACleanCareer, BOSLAACleanSalary, method=c("pearson", "kendall", "spearman"))
head(cars)
summary(cars)
cor(cars$speed, cars$dist)
library(ggplot2)
ggplot(data=cars, aes(x=speed, y=dist)) + geom_point() + theme_classic() +
ggtitle("Scatter Plot for speed vs distance")
cor.test(cars$speed, cars$dist)
cars.lm<-lm(cars$dist~cars$speed, data=cars)
cars.lm
summary(cars.lm)
anova(cars.lm)
plot(cars.lm)
cars.lm2<-lm(cars$dist~cars$speed+ I(cars$speed^2))
cars.lm2
summary(cars.lm2)
plot(cars.lm2)
dist.21<--17.6+ 3.9* 21
dist.21
dist2.21<-2.47+0.913*21+0.0996*21*21
dist2.21
x<-c(0.50,0.75 ,1.00,1.25,1.50,1.75,2.00,2.25,2.50,2.75,3.00,3.25,3.50)
y<-c(10,8,12,12,14,12,16,18,17,20,18,20,21)
pulse<-as.data.frame(cbind(x,y))
ggplot(pulse, aes(x=x, y=y)) + geom_point() + ggtitle("Plot of x vs y")
lm(pulse$y~pulse$x, data =pulse)
plot(lm(y~x))
summary(lm(y~x))
#loading any libraries to be used in this notebook
library(ggplot2)
x<-c(0.46, 0.61, 0.52, 0.48, 0.57, 0.54)
qt(0.99, df=5)
test.st<-(mean(x)-0.5)/(sd(x)/sqrt(6))
1-pt(test.st, 5)
breast.cancer <- BreastCancer_Wisconsin
data("women")
View(women)
ggplot(data = women, aes(x= height, y = weight)) +
geom_point(shape = 3, color = "orange") +
geom_line(linetype = "dashed", color = "blue") +
ggtitle("Scatterplot of women's height vs weight")
ggplot(data = women, aes(x= height, y = weight)) +
geom_point(shape = 6, color = "pink") +
geom_line(linetype = "dashed", color = "blue") +
ggtitle("Scatterplot of women's height vs weight")
#This is a scatterplot where the lines have been added, and given a colour. There are various shaeps.
# Create a numeric vector with the 4th
# item missing
numVector <- c(1, 3, 2, NA)
is.na(numVector)
# Create a numeric vector with the 4th
# item missing
numVector <- c(1, 3, 2, NA, 5)
is.na(numVector)
is.na(numVector[4])
table(is.na(BOS))
is.na(LAA)
table(is.na(BOS))
table(is.na(LAA))
table(is.na(BOSLAA))
(is.na(BOS))
(is.na(LAA))
table(is.na(BOSLAA))
table(is.na(BOSLAA))
(is.na(BOS))
(is.na(LAA))
charvector = c( "A","B","C","D","E","F","G","H","J","")
charvector[10] = NA
is.na(charvector)
charvector = c( "A","B","C","D","E","F","G","H","J","")
charvector[10] = NA
is.na(charvector)
charvector1 = c( "A","B","C","D","E","F","G","H","J","")
is.na(charvector1)
table(is.na(BOSLAA))
(is.na(BOS))
(is.na(LAA))
BOSLAA[!complete.cases(BOSLAA),]
BOSLAA[!complete.cases(BOSLAA),]
League[!complete.cases(League),]
BOSLAA[!complete.cases(BOSLAA),]
# Produces a simple scatter plot of height vs weight for women
ggplot(data = women, aes(x = height, y = weight)) +
geom_point()
ggplot(data = women, aes(x = height, y = weight)) +
geom_point() +
geom_line() +
ggtitle("Scatterplot of Women's Height vs Weight")
ggplot(data = women, aes(x = height, y = weight)) +
geom_point(shape=3, color = "orange") +
geom_line(linetype = "dashed", color = "blue") +
ggtitle("Scatterplot of Women's Weight vs Height")
plot1 <- ggplot(data = women, aes(x = height, y = weight)) +
geom_point(shape=3, color = "orange") +
geom_line(linetype = "dashed", color = "blue") +
ggtitle("Scatterplot of Women's Weight vs Height")
charVector <- c("A", "B", "C", "D", "E", "F", "G", "H", "I", "")
is.na(charVector)
gend = rep(c("M","F", "?"), length.out=20 )
table(gend)
as.factor(gend)
gend1 = rep(c("M","F", "?"), length.out=30 )
heightvector = sample(1:100, 30, replace=TRUE)
gend1 = rep(c("M","F", "?"), length.out=30 )
heightvector = sample(140:200, 30, replace=TRUE)
gend1
heightvector
as.factor(gend1)
boxplot(heightvector~gend1)
install.packages("shiny")
shiny::runApp('~/R/CoronaShmorona/MA/5702 Labs/6/Shinyw6/Shinyw6')
runApp('Shinyw6/Shinyw6/Shinyw6a')
# convert to a factor
gend <- as.factor(gend)
#generate side by side boxplots to compare the heights for the three levels
boxplot(height~gend)
# Create a numeric vector of 30 random heights
heightvector2 <- rnorm(n = 30, mean = 1.7, sd = 0.15)
# Create a new character vector gend and convert to a factor
gend <- rep(c('M','F','?'), length.out=30)
gend <- as.factor(gend)
# convert to a factor
gend <- as.factor(gend)
#generate side by side boxplots to compare the heights for the three levels
boxplot(heightvector2~gend)
rep(1:4,c(2,2,2,2))
rep(1:4,c(2,2,2,2))
rep(1:4,2)
library(foreign)
library(ggplot2)
# testing the iq data for lab
iq = read.spss("iqdata2.sav", to.data.frame=TRUE)
summary(iq)
ggplot(data=iq, aes(x=iq)) + geom_histogram(bins=10) +theme_classic()
ggplot(data = iq, aes(x=group, y=)) +geom_boxplot() + theme_classic()
ggplot(data = iq, aes(x=group, y=iq)) +geom_boxplot() + theme_classic()
ggplot(data = iq, aes(x=group, y=age)) +geom_boxplot() + theme_classic()
summary(aov(iq$iq~iq$group))
