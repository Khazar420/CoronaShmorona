plot(LeagueHitsGLM)
LeagueHitsGLM<-glm(hit.ind~G+R+H+AB+RBI+weight+height+career.length+bats+salary ,data = League, family = "binomial")
LeagueHitsGLM
LeagueHitsGLM<-glm(hit.ind~G+R+H+AB+RBI+weight+height+career.length+bats+salary ,data = League, family = "binomial")
LeagueHitsGLM
library(ggplot2)
library(dplyr)
library(dbplyr)
library(foreign)
library(ggpubr)
library(xtable)
library(mgcv)
library(tree)
library(validate)
library(lubridate)
library(GGally)
library(PerformanceAnalytics)
library(gmodels)
# Code to select the student specific team combination.
# Feel free to change it including the data frame name.
#
# my.2teams.df <- subset(analysis.data, teamID.x=="???" | teamID.x=="???")
BOSLAA = subset(CS5801.data, teamID.x == "BOS" | teamID.x=="LAA")
BOS = subset(CS5801.data, teamID.x == "BOS")
LAA = subset(CS5801.data, teamID.x == "LAA")
summary(BOSLAA)
plot(BOSLAA, panel = panel.smooth)
# Code to select the student specific team combination.
# Feel free to change it including the data frame name.
#
# my.2teams.df <- subset(analysis.data, teamID.x=="???" | teamID.x=="???")
BOSLAA = subset(CS5801.data, teamID.x == "BOS" | teamID.x=="LAA")
BOS = subset(CS5801.data, teamID.x == "BOS")
LAA = subset(CS5801.data, teamID.x == "LAA")
#I am also renaming the dataframe to "League" because I have a personal preference not to have punctuation i the names of my objects
League = CS5801.data
summary(League)
plot(League, panel = panel.smooth)
structure(BOSLAA)
glimpse(BOSLAA)
table(is.na(BOSLAA))
(is.na(BOS))
(is.na(LAA))
table(is.na(League))
table(is.na(BOSLAA))
(is.na(BOS))
(is.na(LAA))
table(is.na(BOSLAA))
(is.na(BOS))
(is.na(LAA))
BOSLAA[!complete.cases(BOSLAA),]
League %>%
rename(
Team = teamID.x,
Runs = R,
Games = G,
Hits = H,
AtBat = AB,
RunsBatted = RBI,
Weight = weight,
Height = height,
Salary = salary,
Birth = birthDate,
Career = career.length,
Bats = bats,
Age = age,
SeasonHit = hit.ind
)
BOSLAA %>%
rename(
Team = teamID.x,
Runs = R,
Games = G,
Hits = H,
AtBat = AB,
RunsBatted = RBI,
Weight = weight,
Height = height,
Salary = salary,
Birth = birthDate,
Career = career.length,
Bats = bats,
Age = age,
SeasonHit = hit.ind
)
BOS %>%
rename(
Team = teamID.x,
Runs = R,
Games = G,
Hits = H,
AtBat = AB,
RunsBatted = RBI,
Weight = weight,
Height = height,
Salary = salary,
Birth = birthDate,
Career = career.length,
Bats = bats,
Age = age,
SeasonHit = hit.ind
)
LAA %>%
rename(
Team = teamID.x,
Runs = R,
Games = G,
Hits = H,
AtBat = AB,
RunsBatted = RBI,
Weight = weight,
Height = height,
Salary = salary,
Birth = birthDate,
Career = career.length,
Bats = bats,
Age = age,
SeasonHit = hit.ind
)
League = CS5801.data
#1
LeagueGames = League$G
BOSLAAGames = BOSLAA$G
BOSGames = BOS$G
LAAGames = LAA$G
#2
LeagueRuns = League$R
BOSLAARuns = BOSLAA$R
BOSRuns = BOS$R
LAARuns = LAA$R
#3
LeagueHits = League$H
BOSLAAHits = BOSLAA$H
BOSHits = BOS$H
LAAHits = LAA$H
#4
LeagueAtBat = League$AB
BOSLAAAtBat = BOSLAA$AB
BOSAtBat = BOS$AB
LAAAtBat = LAA$AB
#5
LeagueRunsBatted = League$RBI
BOSLAARunsBatted = BOSLAA$RBI
BOSRunsBatted = BOS$RBI
LAARunsBatted = LAA$RBI
#6
LeagueWeight = League$weight
BOSLAAWeight = BOSLAA$weight
BOSWeight = BOS$weight
LAAWeight = LAA$weight
#7
LeagueHeight = League$height
BOSLAAHeight = BOSLAA$height
BOSHeight = BOS$height
LAAHeight = LAA$height
#8
LeagueSalary = League$salary
BOSLAASalary = BOSLAA$salary
BOSSalary = BOS$salary
LAASalary = LAA$salary
#9
LeagueBirth = League$birthDate
BOSLAABirth = BOSLAA$birthDate
BOSBirth = BOS$birthDate
LAABirth = LAA$birthDate
#10
LeagueCareer = League$career.length
BOSLAACareer = BOSLAA$career.length
BOSCareer = BOS$career.length
LAACareer = LAA$career.length
#11
LeagueBats = League$bats
BOSLAABats = BOSLAA$bats
BOSBats = BOS$bats
LAABats = LAA$bats
#12
LeagueAge = League$age
BOSLAAAge = BOSLAA$age
BOSAge = BOS$age
LAAAge = LAA$age
#13
LeagueSeasonHit = League$hit.ind
BOSLAASeasonHit = BOSLAA$hit.ind
BOSSeasonHit = BOS$hit.ind
LAASeasonHit = LAA$hit.ind
#14
LeagueplayerID = League$playerID
BOSLAAplayerID = BOSLAA$playerID
BOSplayerID = BOS$playerID
LAAplayerID = LAA$playerID
## Data quality checking for the whole league
summary(League)
LeagueCheck <- check_that(League,
LeagueRuns>= 0,
LeagueGames>= 0,
LeagueHits >= 0,
LeagueAtBat >= 0,
LeagueRunsBatted >= 0,
LeagueWeight > 0,
LeagueHeight > 0,
LeagueSalary > 0,
LeagueBirth > 0,
LeagueCareer >= 0,
LeagueAge > 0,
LeagueBats == "R" | LeagueBats == "L" | LeagueBats == "B",
LeagueSeasonHit == "1" | LeagueSeasonHit == "0")
#Looking for duplicate team namtes
# Produce a bar chart of the quality rule failures
barplot(LeagueCheck, main = "League Verification")
BOSDoubles = duplicated(BOSplayerID)
table(BOSDoubles)
LAADoubles = duplicated(LAAplayerID)
table(LAADoubles)
## Data quality checking for the whole league
summary(League)
LeagueCheck <- check_that(League,
LeagueRuns>= 0,
LeagueGames>= 0,
LeagueHits >= 0,
LeagueAtBat >= 0,
LeagueRunsBatted >= 0,
LeagueWeight > 0,
LeagueHeight > 0,
LeagueSalary > 0,
LeagueBirth > 0,
LeagueCareer >= 0,
LeagueAge > 0,
LeagueBats == "R" | LeagueBats == "L" | LeagueBats == "B",
LeagueSeasonHit == "1" | LeagueSeasonHit == "0")
#Duplicate players are not looked at here for a reason
# Produce a bar chart of the quality rule failures
barplot(LeagueCheck, main = "League Verification")
summary(BOSLAA)
BOSLAACheck <- check_that(BOSLAA,
BOSLAACareer>= 0,
BOSLAARunsBatted>= 0,
BOSLAAGames >= 0,
BOSLAARuns >= 0)
# Produce a bar chart of the quality rule failures. I need to turn it into a dataframe
barplot(BOSLAACheck, main="Boston and LA Verification")
LAACheck <- check_that(LAA,
LAARunsBatted>= 0)
barplot(LAACheck, main = "LA Verification")
BOSCheck <- check_that(BOS,
BOSRunsBatted>= round(0))
barplot(BOSCheck, main = "Boston Verification")
BOSCheckDF =  as.data.frame(BOSCheck)
#let's look at the problem player
ProblemPlayer <- subset(BOSCheckDF, value ==FALSE)
ProblemPlayer
#I have located the player but not identified it
str(BOSCheckDF)
BOSDoubles = duplicated(BOSplayerID)
table(BOSDoubles)
LAADoubles = duplicated(LAAplayerID)
table(LAADoubles)
BOSLAACleanDoubles = duplicated(BOSLAAClean)
table(LAADoubles)
BOSLAACleanDoubles = duplicated(BOSLAAClean)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles = duplicated(BOSLAAClean)
table(BOSLAACleanDoubles)
BOSLAADoubles = duplicated(BOSLAA)
table(BOSLAADoubles)
BOSDoubles = duplicated(BOSplayerID)
table(BOSDoubles)
LAADoubles = duplicated(LAAplayerID)
table(LAADoubles)
BOSDoubles = duplicated(BOSplayerID)
table(BOSDoubles)
LAADoubles = duplicated(LAAplayerID)
table(LAADoubles)
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAADoubles = duplicated(BOSLAA$playerID)
table(BOSLAADoubles)
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles = as.data.frame(BOSLAACleanDoubles)
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles = as.data.frame(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAAClean
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
sort(BOSLAAClean)
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAAClean
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAAClean
SortedBOSLAAClean = BOSLAAClean[order(playerID)]
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAAClean
SortedBOSLAAClean = BOSLAAClean[order(BOSLAAClean$playerID)]
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAAClean
SortedBOSLAAClean = BOSLAAClean[order(playerID)]
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAAClean
SortedBOSLAAClean = BOSLAAClean[,order(playerID(BOSLAAClean))]
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAAClean
SortedBOSLAAClean = BOSLAAClean[,order(colnames(BOSLAAClean))]
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAAClean
SortedBOSLAAClean = BOSLAAClean[,order(colnames(playerID))]
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAAClean
SortedBOSLAAClean = BOSLAAClean[,order(colnames(BOSLAAClean))]
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAAClean
SortedBOSLAAClean = BOSLAAClean[,order(colnames(BOSLAAClean))]
BOSLAAClean %>% tibble %>%
select("playerID", sort(colnames(.)))
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAAClean
SortedBOSLAAClean = BOSLAAClean[,order(colnames(BOSLAAClean))]
SortedBOSLAACleanish = BOSLAAClean %>% tibble %>%
select("playerID", sort(colnames(.)))
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAACleanDoublesed = BOSLAAClean$playerID[duplicated(BOSLAAClean$playerID)]
BOSLAACleanDoublesed
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAACleanDouble = BOSLAAClean$playerID[duplicated(BOSLAAClean$playerID)]
BOSLAAClean
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAACleanDouble = BOSLAAClean$playerID[duplicated(BOSLAAClean$playerID)]
BOSLAACleanDouble
BOSLAAClean
#1
BOSLAACleanGames = BOSLAAClean$G
BOSCleanGames = BOSClean$G
LAACleanGames = LAAClean$G
#2
BOSLAACleanRuns = BOSLAAClean$R
BOSCleanRuns = BOSClean$R
LAACleanRuns = LAAClean$R
#3
BOSLAACleanHits = BOSLAAClean$H
BOSCleanHits = BOSClean$H
LAACleanHits = LAAClean$H
#4
BOSLAACleanAtBat = BOSLAAClean$AB
BOSCleanAtBat = BOSClean$AB
LAACleanAtBat = LAAClean$AB
#5
BOSLAACleanRunsBatted = BOSLAAClean$RBI
BOSCleanRunsBatted = BOSClean$RBI
LAACleanRunsBatted = LAAClean$RBI
#6
BOSLAACleanWeight = BOSLAAClean$weight
BOSCleanWeight = BOSClean$weight
LAACleanWeight = LAAClean$weight
#7
BOSLAACleanHeight = BOSLAAClean$height
BOSCleanHeight = BOSClean$height
LAACleanHeight = LAAClean$height
#8
BOSLAACleanSalary = BOSLAAClean$salary
BOSCleanSalary = BOSClean$salary
LAACleanSalary = LAAClean$salary
#9
BOSLAACleanBirth = BOSLAAClean$birthDate
BOSCleanBirth = BOSClean$birthDate
LAACleanBirth = LAAClean$birthDate
#10
BOSLAACleanCareer = BOSLAAClean$career.length
BOSCleanCareer = BOSClean$career.length
LAACleanCareer = LAAClean$career.length
#11
BOSLAACleanBats = BOSLAAClean$bats
BOSCleanBats = BOSClean$bats
LAACleanBats = LAAClean$bats
#12
BOSLAACleanAge = BOSLAAClean$age
BOSCleanAge = BOSClean$age
LAACleanAge = LAAClean$age
#13
BOSLAACleanSeasonHit = BOSLAAClean$hit.ind
BOSSCleaneasonHit = BOSClean$hit.ind
LAACleanSeasonHit = LAAClean$hit.ind
#14
BOSLAACleanplayerID = BOSLAAClean$playerID
BOSCleanplayerID = BOSClean$playerID
LAACleanplayerID = LAAClean$playerID
##variablew platerID
##teamID.x
##R - Runs
##G - Games
##H - Hits
##AB - AtBat
##RBI - RunsBatted
##weight
##height
##salary
##birthDate - Birth
##career.length - Career
##bats
##age
##hit.ind - SeasonHit
summary(BOSLAAClean)
hist(BOSLAACleanRuns, prob= T)
lines(density(BOSLAACleanRuns), col = "red")
hist(BOSLAACleanGames, prob= T)
lines(density(BOSLAACleanGames), col = "red")
hist(BOSLAACleanHits, prob= T)
lines(density(BOSLAACleanHits), col = "red")
hist(BOSLAACleanAtBat, prob= T)
lines(density(BOSLAACleanAtBat), col = "red")
hist(BOSLAACleanRunsBatted, prob= T)
lines(density(BOSLAACleanRunsBatted), col = "red")
hist(BOSLAACleanWeight, prob= T)
lines(density(BOSLAACleanWeight), col = "red")
hist(BOSLAACleanHeight, prob= T)
lines(density(BOSLAACleanHeight), col = "red")
hist(BOSLAACleanSalary, prob= T)
lines(density(BOSLAACleanSalary), col = "red")
hist(BOSLAACleanCareer, prob= T)
lines(density(BOSLAACleanCareer), col = "red")
hist(BOSLAACleanAge, prob= T)
lines(density(BOSLAACleanAge), col = "red")
hist(BOSLAACleanSeasonHit, prob= T)
lines(density(BOSLAACleanSeasonHit), col = "red")
shapiro.test(BOSLAACleanWeight)
shapiro.test(BOSLAACleanHeight)
shapiro.test(BOSLAACleanAge)
RunSkew = skewness(BOSLAACleanRuns)
RunSkew
HitSkew = skewness(BOSLAACleanHits)
HitSkew
RunsBattedSkew = skewness(BOSLAACleanRunsBatted)
RunsBattedSkew
AtBatSkew = skewness(BOSLAACleanAtBat)
AtBatSkew
GamesSkew = skewness(BOSLAACleanGames)
GamesSkew
SalarySkew = skewness(BOSLAACleanSalary)
SalarySkew
CareerSkew = skewness(BOSLAACleanCareer)
CareerSkew
## create new sets removing values =0
BOSLAACleanRunsDone = BOSLAACleanRuns[BOSLAACleanRuns != "0"]
hist(BOSLAACleanRunsDone, prob = T)
lines(density(BOSLAACleanRunsDone), col = "red")
summary(BOSLAACleanRunsDone)
BOSLAACleanHitsDone = BOSLAACleanHits[BOSLAACleanHits != "0"]
hist(BOSLAACleanHitsDone, prob = T)
lines(density(BOSLAACleanHitsDone), col = "red")
summary(BOSLAACleanHitsDone)
BOSLAACleanAtBatDone = BOSLAACleanAtBat[BOSLAACleanAtBat != "0"]
hist(BOSLAACleanAtBatDone, prob = T)
lines(density(BOSLAACleanAtBatDone), col = "red")
summary(BOSLAACleanAtBatDone)
BOSLAACleanRunsBattedDone = BOSLAACleanRunsBatted[BOSLAACleanRunsBatted !="0"]
##This is a very good moment to remove that -4
hist(BOSLAACleanRunsBattedDone, prob = T)
lines(density(BOSLAACleanRunsBattedDone), col = "red")
summary(BOSLAACleanRunsBattedDone)
##Another way to do this is to select sums greater than or lower than a certain amount. I will probably to this to analyse those who did not do any runs hits, at bats, or bats.
RunsDoneSkew =  skewness(BOSLAACleanRunsDone)
RunsDoneSkew
HisDoneSkew = skewness(BOSLAACleanHitsDone)
HisDoneSkew
AtBatDoneSkew = skewness(BOSLAACleanAtBatDone)
AtBatDoneSkew
RunsBattedDoneSkew = skewness(BOSLAACleanRunsBattedDone)
RunsBattedDoneSkew
##
BOSLAACleanerRunsBattedDone <- abs(BOSLAACleanRunsBattedDone)
BOSLAACleanerRunsBattedDone
hist(BOSLAACleanerRunsBattedDone, prob = T)
lines(density(BOSLAACleanerRunsBattedDone), col = "red")
summary(BOSLAACleanerRunsBattedDone)
CleanerRunsBattedDoneSkew = skewness(BOSLAACleanerRunsBattedDone)
CleanerRunsBattedDoneSkew
