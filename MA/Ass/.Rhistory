BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAAClean
SortedBOSLAAClean = BOSLAAClean[order(playerID)]
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAAClean
SortedBOSLAAClean = BOSLAAClean[,order(playerID(BOSLAAClean))]
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAAClean
SortedBOSLAAClean = BOSLAAClean[,order(colnames(BOSLAAClean))]
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAAClean
SortedBOSLAAClean = BOSLAAClean[,order(colnames(playerID))]
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAAClean
SortedBOSLAAClean = BOSLAAClean[,order(colnames(BOSLAAClean))]
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAAClean
SortedBOSLAAClean = BOSLAAClean[,order(colnames(BOSLAAClean))]
BOSLAAClean %>% tibble %>%
select("playerID", sort(colnames(.)))
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAAClean
SortedBOSLAAClean = BOSLAAClean[,order(colnames(BOSLAAClean))]
SortedBOSLAACleanish = BOSLAAClean %>% tibble %>%
select("playerID", sort(colnames(.)))
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAACleanDoublesed = BOSLAAClean$playerID[duplicated(BOSLAAClean$playerID)]
BOSLAACleanDoublesed
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAACleanDouble = BOSLAAClean$playerID[duplicated(BOSLAAClean$playerID)]
BOSLAAClean
BOSLAACleanDoubles = duplicated(BOSLAAClean$playerID)
table(BOSLAACleanDoubles)
BOSLAACleanDoubles
BOSLAACleanDouble = BOSLAAClean$playerID[duplicated(BOSLAAClean$playerID)]
BOSLAACleanDouble
BOSLAAClean
#1
BOSLAACleanGames = BOSLAAClean$G
BOSCleanGames = BOSClean$G
LAACleanGames = LAAClean$G
#2
BOSLAACleanRuns = BOSLAAClean$R
BOSCleanRuns = BOSClean$R
LAACleanRuns = LAAClean$R
#3
BOSLAACleanHits = BOSLAAClean$H
BOSCleanHits = BOSClean$H
LAACleanHits = LAAClean$H
#4
BOSLAACleanAtBat = BOSLAAClean$AB
BOSCleanAtBat = BOSClean$AB
LAACleanAtBat = LAAClean$AB
#5
BOSLAACleanRunsBatted = BOSLAAClean$RBI
BOSCleanRunsBatted = BOSClean$RBI
LAACleanRunsBatted = LAAClean$RBI
#6
BOSLAACleanWeight = BOSLAAClean$weight
BOSCleanWeight = BOSClean$weight
LAACleanWeight = LAAClean$weight
#7
BOSLAACleanHeight = BOSLAAClean$height
BOSCleanHeight = BOSClean$height
LAACleanHeight = LAAClean$height
#8
BOSLAACleanSalary = BOSLAAClean$salary
BOSCleanSalary = BOSClean$salary
LAACleanSalary = LAAClean$salary
#9
BOSLAACleanBirth = BOSLAAClean$birthDate
BOSCleanBirth = BOSClean$birthDate
LAACleanBirth = LAAClean$birthDate
#10
BOSLAACleanCareer = BOSLAAClean$career.length
BOSCleanCareer = BOSClean$career.length
LAACleanCareer = LAAClean$career.length
#11
BOSLAACleanBats = BOSLAAClean$bats
BOSCleanBats = BOSClean$bats
LAACleanBats = LAAClean$bats
#12
BOSLAACleanAge = BOSLAAClean$age
BOSCleanAge = BOSClean$age
LAACleanAge = LAAClean$age
#13
BOSLAACleanSeasonHit = BOSLAAClean$hit.ind
BOSSCleaneasonHit = BOSClean$hit.ind
LAACleanSeasonHit = LAAClean$hit.ind
#14
BOSLAACleanplayerID = BOSLAAClean$playerID
BOSCleanplayerID = BOSClean$playerID
LAACleanplayerID = LAAClean$playerID
##variablew platerID
##teamID.x
##R - Runs
##G - Games
##H - Hits
##AB - AtBat
##RBI - RunsBatted
##weight
##height
##salary
##birthDate - Birth
##career.length - Career
##bats
##age
##hit.ind - SeasonHit
summary(BOSLAAClean)
hist(BOSLAACleanRuns, prob= T)
lines(density(BOSLAACleanRuns), col = "red")
hist(BOSLAACleanGames, prob= T)
lines(density(BOSLAACleanGames), col = "red")
hist(BOSLAACleanHits, prob= T)
lines(density(BOSLAACleanHits), col = "red")
hist(BOSLAACleanAtBat, prob= T)
lines(density(BOSLAACleanAtBat), col = "red")
hist(BOSLAACleanRunsBatted, prob= T)
lines(density(BOSLAACleanRunsBatted), col = "red")
hist(BOSLAACleanWeight, prob= T)
lines(density(BOSLAACleanWeight), col = "red")
hist(BOSLAACleanHeight, prob= T)
lines(density(BOSLAACleanHeight), col = "red")
hist(BOSLAACleanSalary, prob= T)
lines(density(BOSLAACleanSalary), col = "red")
hist(BOSLAACleanCareer, prob= T)
lines(density(BOSLAACleanCareer), col = "red")
hist(BOSLAACleanAge, prob= T)
lines(density(BOSLAACleanAge), col = "red")
hist(BOSLAACleanSeasonHit, prob= T)
lines(density(BOSLAACleanSeasonHit), col = "red")
shapiro.test(BOSLAACleanWeight)
shapiro.test(BOSLAACleanHeight)
shapiro.test(BOSLAACleanAge)
RunSkew = skewness(BOSLAACleanRuns)
RunSkew
HitSkew = skewness(BOSLAACleanHits)
HitSkew
RunsBattedSkew = skewness(BOSLAACleanRunsBatted)
RunsBattedSkew
AtBatSkew = skewness(BOSLAACleanAtBat)
AtBatSkew
GamesSkew = skewness(BOSLAACleanGames)
GamesSkew
SalarySkew = skewness(BOSLAACleanSalary)
SalarySkew
CareerSkew = skewness(BOSLAACleanCareer)
CareerSkew
## create new sets removing values =0
BOSLAACleanRunsDone = BOSLAACleanRuns[BOSLAACleanRuns != "0"]
hist(BOSLAACleanRunsDone, prob = T)
lines(density(BOSLAACleanRunsDone), col = "red")
summary(BOSLAACleanRunsDone)
BOSLAACleanHitsDone = BOSLAACleanHits[BOSLAACleanHits != "0"]
hist(BOSLAACleanHitsDone, prob = T)
lines(density(BOSLAACleanHitsDone), col = "red")
summary(BOSLAACleanHitsDone)
BOSLAACleanAtBatDone = BOSLAACleanAtBat[BOSLAACleanAtBat != "0"]
hist(BOSLAACleanAtBatDone, prob = T)
lines(density(BOSLAACleanAtBatDone), col = "red")
summary(BOSLAACleanAtBatDone)
BOSLAACleanRunsBattedDone = BOSLAACleanRunsBatted[BOSLAACleanRunsBatted !="0"]
##This is a very good moment to remove that -4
hist(BOSLAACleanRunsBattedDone, prob = T)
lines(density(BOSLAACleanRunsBattedDone), col = "red")
summary(BOSLAACleanRunsBattedDone)
##Another way to do this is to select sums greater than or lower than a certain amount. I will probably to this to analyse those who did not do any runs hits, at bats, or bats.
RunsDoneSkew =  skewness(BOSLAACleanRunsDone)
RunsDoneSkew
HisDoneSkew = skewness(BOSLAACleanHitsDone)
HisDoneSkew
AtBatDoneSkew = skewness(BOSLAACleanAtBatDone)
AtBatDoneSkew
RunsBattedDoneSkew = skewness(BOSLAACleanRunsBattedDone)
RunsBattedDoneSkew
##
BOSLAACleanerRunsBattedDone <- abs(BOSLAACleanRunsBattedDone)
BOSLAACleanerRunsBattedDone
hist(BOSLAACleanerRunsBattedDone, prob = T)
lines(density(BOSLAACleanerRunsBattedDone), col = "red")
summary(BOSLAACleanerRunsBattedDone)
CleanerRunsBattedDoneSkew = skewness(BOSLAACleanerRunsBattedDone)
CleanerRunsBattedDoneSkew
##sum of something above a certain limit
table(mpg$`model year`)
sum(mpg$`model year`>79)
SalaryTree<-tree(BOSLAAClean$salary~., data = BOSLAAClean)
library(ggplot2)
library(dplyr)
library(dbplyr)
library(foreign)
library(ggpubr)
library(xtable)
library(mgcv)
library(tree)
library(validate)
library(lubridate)
library(GGally)
library(PerformanceAnalytics)
library(gmodels)
ggcorr(BOSLAAClean, nbreaks = 20)
#although the number of breaks might seen high, it allows for the accuracy of a continuous gradient while being able to know what value it corresponds to.
#Both have been included for comparison
ggcorr(BOSLAAClean)
ggcorr(BOSLAAClean, nbreaks = 20)
#although the number of breaks might seen high, it allows for the accuracy of a continuous gradient while being able to know what value it corresponds to.
#Both have been included for comparison
ggcorr(BOSLAAClean)
ggcorr(BOSLAAClean, palette = "PuOr" # colorblind safe, photocopy-able
))
ggcorr(BOSLAAClean, nbreaks = 20)
#although the number of breaks might seen high, it allows for the accuracy of a continuous gradient while being able to know what value it corresponds to.
#Both have been included for comparison
ggcorr(BOSLAAClean)
ggcorr(BOSLAAClean, palette = "PuOr" # colorblind safe, photocopy-able
)
ggcorr(BOSLAAClean, nbreaks = 20)
#although the number of breaks might seen high, it allows for the accuracy of a continuous gradient while being able to know what value it corresponds to.
#Both have been included for comparison
ggcorr(BOSLAAClean)
#This is the colourblind friendly version
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggcorr(BOSLAAClean, scale_colour_manual(scale_colour_manual(values=cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7"))
ggcorr(BOSLAAClean, nbreaks = 20)
#although the number of breaks might seen high, it allows for the accuracy of a continuous gradient while being able to know what value it corresponds to.
#Both have been included for comparison
ggcorr(BOSLAAClean)
#This is the colourblind friendly version
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggcorr(BOSLAAClean, scale_colour_manual(scale_colour_manual(values=cbp2)
ggcorr(BOSLAAClean, nbreaks = 20)
#although the number of breaks might seen high, it allows for the accuracy of a continuous gradient while being able to know what value it corresponds to.
#Both have been included for comparison
ggcorr(BOSLAAClean)
#This is the colourblind friendly version
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggcorr(BOSLAAClean, scale_colour_manual(scale_colour_manual(values=cbp2))
ggcorr(BOSLAAClean, nbreaks = 20)
#although the number of breaks might seen high, it allows for the accuracy of a continuous gradient while being able to know what value it corresponds to.
#Both have been included for comparison
ggcorr(BOSLAAClean)
#This is the colourblind friendly version
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggcorr(BOSLAAClean, scale_colour_manual(scale_colour_manual(values=cbp2)))
ggcorr(BOSLAAClean, nbreaks = 20)
#although the number of breaks might seen high, it allows for the accuracy of a continuous gradient while being able to know what value it corresponds to.
#Both have been included for comparison
ggcorr(BOSLAAClean)
#This is the colourblind friendly version
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggcorr(BOSLAAClean + scale_colour_manual(scale_colour_manual(values=cbp2)))
install.packages("RColorBrewer")
library(RColorBrewer)
display.brewer.all(colorblindFriendly = TRUE)
#This is the colourblind friendly version
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggcorr(BOSLAAClean + scale_colour_manual(scale_colour_manual(values=cbp2)))
library(RColorBrewer)
display.brewer.all(colorblindFriendly = TRUE)
#This is the colourblind friendly version
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggcorr(BOSLAAClean + scale_colour_manual(scale_colour_manual(values="Paired")))
library(ggplot2)
library(dplyr)
library(dbplyr)
library(foreign)
library(ggpubr)
library(xtable)
library(mgcv)
library(tree)
library(validate)
library(lubridate)
library(GGally)
library(PerformanceAnalytics)
library(gmodels)
library(RColorBrewer)
display.brewer.all(colorblindFriendly = TRUE)
#This is the colourblind friendly version
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggcorr(BOSLAAClean + scale_colour_manual(scale_colour_manual(values="Paired")))
library(RColorBrewer)
display.brewer.all(colorblindFriendly = TRUE)
#This is the colourblind friendly version
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggcorr(BOSLAAClean + palette = "PuOr" # colorblind safe)
library(RColorBrewer)
display.brewer.all(colorblindFriendly = TRUE)
#This is the colourblind friendly version
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggcorr(BOSLAAClean + palette = "cbp2" # colorblind safe)
library(RColorBrewer)
display.brewer.all(colorblindFriendly = TRUE)
#This is the colourblind friendly version
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggcorr(BOSLAAClean, palette = "cbp2" # colorblind safe)
library(RColorBrewer)
display.brewer.all(colorblindFriendly = TRUE)
#This is the colourblind friendly version
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggcorr(BOSLAAClean, palette = "cbp2" # colorblind safe, photocopy-able)
library(RColorBrewer)
display.brewer.all(colorblindFriendly = TRUE)
#This is the colourblind friendly version
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggcorr(BOSLAAClean,
palette = "cbp2" # colorblind safe, photocopy-able)
library(RColorBrewer)
display.brewer.all(colorblindFriendly = TRUE)
#This is the colourblind friendly version
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggcorr(BOSLAAClean,
palette = "cbp2" #colorblind safe, photocopy-able))
library(RColorBrewer)
display.brewer.all(colorblindFriendly = TRUE)
#This is the colourblind friendly version
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggcorr(BOSLAAClean,
palette = "cbp2" )
library(RColorBrewer)
display.brewer.all(colorblindFriendly = TRUE)
#This is the colourblind friendly version
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggcorr(BOSLAAClean,
palette = "PuOr" )
library(RColorBrewer)
display.brewer.all(colorblindFriendly = TRUE)
#This is the colourblind friendly version
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggcorr(BOSLAAClean,
palette = "PuOr" # colorblind safe, photocopy-able
)
library(RColorBrewer)
display.brewer.all(colorblindFriendly = TRUE)
#This is the colourblind friendly version
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggcorr(BOSLAAClean, palette = "Dark2" # colorblind safe, photocopy-able
)
library(RColorBrewer)
display.brewer.all(colorblindFriendly = TRUE)
#This is the colourblind friendly version
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
colourblind = ggcorr(BOSLAAClean, palette = "Dark2" # colorblind safe, photocopy-able
)
colourblind
#for some reason, it is not coming out with a different colout.
library(RColorBrewer)
display.brewer.all(colorblindFriendly = TRUE)
#This is the colourblind friendly version
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
colourblind = ggcorr(BOSLAAClean, scale_color_brewer(palette = "Dark2")
)
library(RColorBrewer)
display.brewer.all(colorblindFriendly = TRUE)
#This is the colourblind friendly version
cbp2 <- c("#000000", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
colourblind = ggcorr(BOSLAAClean + scale_color_brewer(palette = "Dark2")
)
ggcorr(BOSLAAClean, nbreaks = 20)
#although the number of breaks might seen high, it allows for the accuracy of a continuous gradient while being able to know what value it corresponds to.
#Both have been included for comparison
ggcorr(BOSLAAClean)
ggcorr(BOSLAAClean + scale_color_brewer(palette = "Dark2")
ggcorr(BOSLAAClean + scale_color_brewer(palette = "Dark2"))
ggcorr(BOSLAAClean + scale_color_brewer(palette = "Dark2"))
ggcorr(BOSLAAClean, nbreaks = 20)
#although the number of breaks might seen high, it allows for the accuracy of a continuous gradient while being able to know what value it corresponds to.
#Both have been included for comparison
ggcorr(BOSLAAClean)
table(ggcorr(BOSLAAClean))
step(BOSLAAClean)
step(HitsLM)
ggplot(BOSLAAClean, aes(x=BOSLAACleanBats, y=BOSLAACleanSalary)) + geom_boxplot()
ggplot(LAAClean, aes(x=LAACleanBats, y=LAACleanSalary)) + geom_boxplot()
ggplot(BOSClean, aes(x=BOSCleanBats, y=BOSCleanSalary)) + geom_boxplot()
BOSLAACleanMonth = month(BOSLAACleanBirth)
BOSLAACleanMonthFactor = factor(BOSLAACleanMonth)
levels(BOSLAACleanMonthFactor)
ggplot(BOSLAAClean, aes(x=BOSLAACleanMonthFactor, y=BOSLAACleanSalary)) + geom_boxplot() + geom_jitter(color = "red")
BOSLAACleanYear = year(BOSLAACleanBirth)
BOSLAACleanYearFactor = factor(BOSLAACleanYear)
levels(BOSLAACleanYearFactor)
ggplot(BOSLAAClean, aes(x=BOSLAACleanYearFactor, y=BOSLAACleanSalary, prob = T,)) + geom_boxplot() +
geom_jitter(color = "red")
class(BOSLAACleanMonthNumeric)
BOSLAACleanSeasonHitFactor = factor(BOSLAACleanSeasonHit)
levels(BOSLAACleanSeasonHitFactor)
ggplot(BOSLAAClean, aes(x=BOSLAACleanSeasonHitFactor, y=BOSLAACleanSalary)) + geom_boxplot()
##testing correlations is important here
cor(BOSLAACleanAge, BOSLAACleanSalary, method = c("pearson", "kendall", "spearman"))
cor.test(BOSLAACleanAge, BOSLAACleanSalary, method=c("pearson", "kendall", "spearman"))
cor(BOSLAACleanCareer, BOSLAACleanSalary, method = c("pearson", "kendall", "spearman"))
cor.test(BOSLAACleanCareer, BOSLAACleanSalary, method=c("pearson", "kendall", "spearman"))
cor(BOSLAACleanSeasonHit, BOSLAACleanSalary, method = c("pearson", "kendall", "spearman"))
cor.test(BOSLAACleanSeasonHit, BOSLAACleanSalary, method=c("pearson", "kendall", "spearman"))
cor(BOSLAACleanMonth, BOSLAACleanSalary, method = c("pearson", "kendall", "spearman"))
cor.test(BOSLAACleanMonth, BOSLAACleanSalary, method=c("pearson", "kendall", "spearman"))
##testing correlations is important here
cor(BOSLAACleanAge, BOSLAACleanSalary, method = c("pearson", "kendall", "spearman"))
cor.test(BOSLAACleanAge, BOSLAACleanSalary, method=c("pearson", "kendall", "spearman"))
cor(BOSLAACleanCareer, BOSLAACleanSalary, method = c("pearson", "kendall", "spearman"))
cor.test(BOSLAACleanCareer, BOSLAACleanSalary, method=c("pearson", "kendall", "spearman"))
cor(BOSLAACleanSeasonHit, BOSLAACleanSalary, method = c("pearson", "kendall", "spearman"))
cor.test(BOSLAACleanSeasonHit, BOSLAACleanSalary, method=c("pearson", "kendall", "spearman"))
cor(BOSLAACleanMonth, BOSLAACleanSalary, method = c("pearson", "kendall", "spearman"))
cor.test(BOSLAACleanMonth, BOSLAACleanSalary, method=c("pearson", "kendall", "spearman"))
#create version of only what was done
# another version could perhaps include the version with the zero values to illustrate their effect
HitsLM = (lm(formula = BOSLAACleanHits ~ BOSLAACleanSalary))
plot(HitsLM)
GamesLM = (lm(formula = BOSLAACleanGames ~ BOSLAACleanSalary))
plot(GamesLM)
RunsLM = (lm(formula = BOSLAACleanRuns ~ BOSLAACleanSalary))
plot(RunsLM)
RunsBattedLM = (lm(formula = BOSLAACleanRunsBatted ~ BOSLAACleanSalary))
plot(RunsBattedLM)
step(GamesLM)
step(RunsLM)
step(RunsBattedLM)
summary(GamesLM)
summary(RunsLM)
summary(RunsBattedLM)
step(GamesLM)
step(RunsLM)
step(RunsBattedLM)
summary(GamesLM)
summary(RunsLM)
summary(RunsBattedLM)
SalaryLM = (lm(formula = BOSLAACleanSalary ~ BOSLAACleanSalary + BOSLAACleanHits + BOSLAACleanGames + BOSLAACleanRuns))
plot(SalaryLM)
SalaryLM = (lm(formula = BOSLAACleanSalary ~ BOSLAACleanSalary + BOSLAACleanHits + BOSLAACleanGames + BOSLAACleanRuns))
plot(SalaryLM)
step(SalaryLM)
SalaryLM = (lm(formula = BOSLAACleanSalary ~ BOSLAACleanSalary + BOSLAACleanHits + BOSLAACleanGames + BOSLAACleanRuns +BOSLAACleanHeight + BOSLAACleanWeight))
plot(SalaryLM)
step(SalaryLM)
HeightLM = lm(formula = BOSLAACleanHeight ~ BOSLAACleanSalary)
plot(HeightLM)
WeightLM = lm(formula = BOSLAACleanWeight ~ BOSLAACleanSalary)
plot(WeightLM)
#create model comparing heigth and weright - scatter plot?
SalaryLM = (lm(formula = BOSLAACleanSalary ~ BOSLAACleanSalary + BOSLAACleanHits + BOSLAACleanGames + BOSLAACleanRuns +BOSLAACleanHeight + BOSLAACleanWeight))
plot(SalaryLM)
step(SalaryLM)
SalaryTree<-tree(BOSLAAClean$salary~., data = BOSLAAClean)
SalaryTree<-tree(BOSLAAClean$salary, data = BOSLAAClean)
SalaryTree<-tree(BOSLAAClean$salary~., data = BOSLAAClean)
View(ozone.pollution)
SalaryLM2<-lm(BOSLAACleanSalary~BOSLAACleanAge*BOSLAACleanAtBat*BOSLAACleanAtBatDone*BOSLAACleanSalary+I(BOSLAACleanAge^2)+ I(BOSLAACleanAtBat^2)+ I(BOSLAACleanAtBatDone^2), data=BOSLAAClean )
SalaryLM2<-lm(BOSLAACleanSalary~BOSLAACleanAge*BOSLAACleanAtBat*BOSLAACleanBats*BOSLAACleanSalary+I(BOSLAACleanAge^2)+ I(BOSLAACleanAtBat^2)+ I(BOSLAACleanBats^2), data=BOSLAAClean )
table(BOSLAACleanSeasonHit)
mean(BOSLAACleanSeasonHit)
lm(formula = BOSLAACleanSeasonHit ~ BOSLAACleanSalary + BOSLAACleanHits + BOSLAACleanGames + BOSLAACleanRuns +BOSLAACleanHeight + BOSLAACleanWeight))
lm(formula = BOSLAACleanSeasonHit ~ BOSLAACleanSalary + BOSLAACleanHits + BOSLAACleanGames + BOSLAACleanRuns +BOSLAACleanHeight + BOSLAACleanWeight)
HitsLM = lm(formula = BOSLAACleanSeasonHit ~ BOSLAACleanSalary + BOSLAACleanHits + BOSLAACleanGames + BOSLAACleanRuns +BOSLAACleanHeight + BOSLAACleanWeight)
plot(HitsLM)
step(HitsLM)
step(GamesLM)
step(RunsLM)
step(RunsBattedLM)
summary(GamesLM)
summary(RunsLM)
summary(RunsBattedLM)
HeightLM = lm(formula = BOSLAACleanHeight ~ BOSLAACleanSalary)
plot(HeightLM)
WeightLM = lm(formula = BOSLAACleanWeight ~ BOSLAACleanSalary)
plot(WeightLM)
#create model comparing heigth and weright - scatter plot?
summary(HeightLM)
summary(WeightLM)
summary(GamesLM)
summary(RunsLM)
summary(RunsBattedLM)
